-- Creating tables for PH-EmployeeDB
CREATE TABLE departments (
     dept_no VARCHAR(4) NOT NULL,
     dept_name VARCHAR(40) NOT NULL,
     PRIMARY KEY (dept_no),
     UNIQUE (dept_name)
);

--Creating Employee Table
CREATE TABLE Employees (
	emp_no INT NOT NULL,
	birth_date DATE NOT NULL,
	first_name VARCHAR NOT NULL,
	last_name VARCHAR NOT NULL,
	gender VARCHAR NOT NULL,
	hire_date DATE NOT NULL,
	PRIMARY KEY (emp_no)
);

--Creating dept_manager Table
CREATE TABLE dept_manager (
	dept_no VARCHAR(4) NOT NULL,
    emp_no INT NOT NULL,
    from_date DATE NOT NULL,
    to_date DATE NOT NULL,
	
	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
	FOREIGN KEY (dept_no) REFERENCES departments (dept_no),
	
    PRIMARY KEY (emp_no, dept_no)
);

--Creating salaries Table
CREATE TABLE salaries (
	emp_no INT NOT NULL,
	salary INT NOT NULL,
	from_date DATE NOT NULL,
	to_date DATE NOT NULL,
	
	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
	PRIMARY KEY (emp_no)
);

--Creating titles table (WHY ARE TITLE AND FROM DATE PKEYS HERE?)
CREATE TABLE titles (
	emp_no INT NOT NULL,
	title VARCHAR NOT NULL,
	from_date DATE NOT NULL,
	to_date DATE NOT NULL,
	
	FOREIGN KEY (emp_no) REFERENCES salaries (emp_no),
	PRIMARY KEY (emp_no, title, from_date)
);

--Creating department_employee table
CREATE TABLE department_employee (
	emp_no INT NOT NULL,
	dept_no VARCHAR(4) NOT NULL,
	from_date DATE NOT NULL,
	to_date DATE NOT NULL,
	
	FOREIGN KEY (dept_no) REFERENCES departments (dept_no),
	FOREIGN KEY (emp_no) REFERENCES employees (emp_no),
	PRIMARY KEY (dept_no, emp_no)
);

-- Looking only at how many employees were born in 1952
SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1952-01-01' AND '1952-12-31';

-- Looking only at how many employees were born in 1953
SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1953-01-01' AND '1953-12-31';

-- Looking only at how many employees were born in 1954
SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1954-01-01' AND '1954-12-31';

-- Looking only at how many employees were born in 1955
SELECT first_name, last_name
FROM employees
WHERE birth_date BETWEEN '1955-01-01' AND '1955-12-31';

-- Retirement eligibility
SELECT first_name, last_name
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND
(hire_date BETWEEN '1985-01-01' AND '1988-12-31');

-- Finding the COUNT Retirement eligibility
SELECT COUNT (first_name)
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND
(hire_date BETWEEN '1985-01-01' AND '1988-12-31');

--Creating a new table of retirement eligibility
SELECT first_name, last_name
INTO retirement_info
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');

--Checking the new table 'retirement_info'
SELECT * FROM retirement_info;

--Changing the retirement_info table, so must first drop it
DROP TABLE retirement_info CASCADE;

--Creating the new retirement_info table
SELECT emp_no, first_name, last_name
INTO retirement_info
FROM employees
WHERE(birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');


SELECT * FROM retirement_info

--Joining departments and dept_manager tables
--Returns each department name/ employee #, from- and to- dates
SELECT 
departments.dept_name,
dept_manager.emp_no,
dept_manager.from_date,
dept_manager.to_date
FROM departments
INNER JOIN dept_manager
ON departments.dept_no = dept_manager.dept_no;

--Joining retirement_info and dept_emp tables
SELECT 
re.emp_no,
re.first_name,
re.last_name,
de.to_date
INTO current_emp
FROM retirement_info AS re
LEFT JOIN department_employee as de
ON re.emp_no = de.emp_no
WHERE de.to_date = ('9999-01-01');

SELECT * FROM current_emp;

-- Employee count by department number
SELECT COUNT(ce.emp_no), de.dept_no
INTO emp_count
FROM current_emp as ce
LEFT JOIN department_employee as de
ON ce.emp_no = de.emp_no
GROUP BY de.dept_no
ORDER BY de.dept_no;

SELECT * FROM salaries
ORDER BY to_date DESC;


 --our employees table has been filtered again and is 
 --being saved into a new temporary table (emp_info),
 --Used to join with salaries to gain information we need
SELECT 
emp_no,
first_name,
last_name,
gender
INTO emp_info_temp
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' AND '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');

-- Joining the tables and the information we need
SELECT 
e.emp_no,
e.first_name,
e.last_name,
e.gender,
s.salary,
de.to_date

INTO emp_info

FROM emp_info_temp AS e
INNER JOIN salaries as s
ON (e.emp_no = s.emp_no)

INNER JOIN department_employee as de
ON (e.emp_no = de.emp_no)

WHERE (de.to_date = '9999-01-01');


-- If we wanted to create the same table without creating a
-- temp table, we would use this code
-- Joining the tables and the information we need
SELECT 
e.emp_no,
e.first_name,
e.last_name,
e.gender,
s.salary,
de.to_date

INTO emp_info

FROM employees AS e
INNER JOIN salaries as s
ON (e.emp_no = s.emp_no)

INNER JOIN department_employee as de
ON (e.emp_no = de.emp_no)

WHERE 
(e.birth_date BETWEEN '1952-01-01' AND '1955-12-31') AND 
(e.hire_date BETWEEN '1985-01-01' AND '1988-12-31') AND
(de.to_date = '9999-01-01');

SELECT * FROM emp_info


-- List of managers per department
-- Using: Departments, Managers, and Current Employees
SELECT  dm.dept_no,
        d.dept_name,
        dm.emp_no,
        ce.last_name,
        ce.first_name,
        dm.from_date,
        dm.to_date
INTO manager_info
FROM dept_manager AS dm
    INNER JOIN departments AS d
        ON (dm.dept_no = d.dept_no)
    INNER JOIN current_emp AS ce
        ON (dm.emp_no = ce.emp_no);


SELECT ce.emp_no,
ce.first_name,
ce.last_name,
d.dept_name
-- INTO dept_info
FROM current_emp as ce
INNER JOIN department_employee AS de
ON (ce.emp_no = de.emp_no)
INNER JOIN departments AS d
ON (de.dept_no = d.dept_no);

-- containing only employees in their department.
SELECT 
retirement_info.emp_no,
retirement_info.first_name,
retirement_info.last_name,
departments.dept_name
INTO retirement_departments
FROM retirement_info
INNER JOIN department_employee
ON (retirement_info.emp_no = department_employee.emp_no)
INNER JOIN departments
ON (department_employee.dept_no = departments.dept_no);

-- list of retiring employees in both sales and development
SELECT *
INTO sales_development_retiring
FROM retirement_departments
WHERE (dept_name = 'Development') OR
(dept_name = 'Sales');

SELECT * FROM sales_development_retiring;

-- Employee_Database_Challenge
-- Output notices that there are duplicates
SELECT
DISTINCT ON (e.emp_no)
e.emp_no,
e.first_name,
e.last_name,
ti.title,
ti.from_date,
ti.to_date
INTO unique_titles
FROM employees as e
INNER JOIN titles as ti
ON (e.emp_no = ti.emp_no)
WHERE (e.birth_date BETWEEN '1952-01-01' AND '1955-12-31') AND
(ti.to_date = '9999-01-01')
ORDER BY emp_no ASC, to_date DESC;

SELECT * FROM unique_titles;

-- Retrieve number of employees by their most recent job title
SELECT COUNT (title), title 
INTO retiring_titles
FROM unique_titles
GROUP BY (title)
ORDER BY count DESC;

SELECT 
DISTINCT ON (emp_no)
e.emp_no,
e.first_name,
e.last_name,
e.birth_date,
de.from_date,
de.to_date,
ti.title
INTO mentorship_eligibilty
FROM employees as e
INNER JOIN department_employee as de
ON (e.emp_no = de.emp_no)
INNER JOIN titles as ti
ON (e.emp_no = ti.emp_no)
WHERE (ti.to_date = '9999-01-01') AND
(birth_date BETWEEN '1965-01-01' AND '1965-12-31')
ORDER BY emp_no ASC,to_date DESC;





